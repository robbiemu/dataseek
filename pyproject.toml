[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dataseek"
version = "0.2.2"
description = "DataSeek: A standalone data prospecting agent for finding reliable, verifiable data sources"
authors = [
    { name = "Robert Collins", email = "roberto.tomas.cuentas@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pydantic>=2.11.9",
    "pyyaml>=6.0.2",
    "langgraph>=0.6.7",
    "langgraph-checkpoint-sqlite>=2.0.11",
    "langchain-community>=0.3.29",
    "langchain-litellm>=0.2.2",
    "langchain-tavily>=0.2.11",
    "langchain-google-community>=2.0.10",
    "langsmith>=0.4.28",
    "litellm>=1.77.1",
    "requests>=2.32.5",
    "html5lib>=1.1",
    "httpx>=0.28.1",
    "attachments>=0.25.1",
    "beautifulsoup4>=4.12.3",
    "google-api-python-client>=2.182.0",
    "google-search-results>=2.4.2",
    "arxiv>=2.2.0",
    "wikipedia>=1.4.0",
    "json-repair>=0.50.1",
    # TUI dependencies
    "textual>=6.1.0",
    "typer>=0.19.2",
    "darkdetect>=0.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "black>=25.9.0",
    "ruff>=0.13.1",
    "mypy>=1.18.2",
    "bandit>=1.8.6",
    "pre-commit>=4.3.0",
    "types-PyYAML>=6.0.12.20250915",
    "types-requests>=2.32.4.20250913",
    "types-beautifulsoup4>=4.12.0.20250516",
]
# Optional dependency for the crawler tool, requires playwright is installed on the system
crawler = ["libcrawler"]


[project.scripts]
dataseek = "seek.main:main"
dataseek-tui = "seek.components.tui.dataseek_tui:main"


[tool.setuptools]
# Auto-discover all seek* packages so moved components are included
packages = { find = { where = ["."], include = ["seek*"] } }

[tool.setuptools.package-data]
"seek" = ["../config/*.yaml", "../settings/*.yaml", "components/tui/styles.tcss"]


[tool.black]
line-length = 100
target-version = ["py313"]


[tool.ruff]
target-version = "py313"
line-length = 100
[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "UP",  # pyupgrade
    "ARG", # flake8-arg-names
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
    "PT",  # flake8-pytest-style
]
exclude = [".venv", "build", "dist"]
dummy-variable-rgx = "^(_.*|dummy|unused|ctx|args|kwargs|event)$"

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = [
    "ARG001",  # Unused parameters in tests (fixtures, mocks)
    "ARG002",  # Unused arguments in tests (fixtures, mocks)
    "F841",    # Assigned but unused (side-effect tests)
    "SIM117",  # try/finally often clearer in tests
    "B018",    # Useless expression (docstrings in tests)
]


[tool.mypy]
python_version = "3.13"
warn_unused_configs = true
disallow_untyped_defs = true
no_site_packages = false
files = ["seek"]

[[tool.mypy.overrides]]
# Skip mypy checks for all test modules, including component-local tests under seek/**/tests
module = [
  "seek.*.tests.*",
]
ignore_errors = true

[[tool.mypy.overrides]]
module = "darkdetect"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "langchain_google_community"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "libcrawler.libcrawler"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "arxiv"
ignore_missing_imports = true


[tool.bandit]
skips = ["B101", "B608"]
exclude_dirs = [".venv", "tests"]

[tool.pytest.ini_options]
addopts = "-q"
# Discover both root tests and component-local tests
testpaths = [
  "tests",
  "seek/components",
]
pythonpath = ["."]
